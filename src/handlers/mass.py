"""
Mass operations handlers
"""
from telegram import Update
from telegram.ext import ContextTypes, CallbackQueryHandler
from telegram.constants import ParseMode

from src.core.logger import log
from src.middleware.auth import admin_only
from src.utils.keyboards import keyboards


@admin_only
async def mass_menu_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Show mass operations menu"""
    query = update.callback_query
    await query.answer()
    
    text = """
üîÑ <b>–ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏</b>

‚ö†Ô∏è –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã! –ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤–ª–∏—è—é—Ç –Ω–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
    """
    
    await query.edit_message_text(
        text.strip(),
        reply_markup=keyboards.mass_operations_menu(),
        parse_mode=ParseMode.HTML
    )


@admin_only
async def mass_extend_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle mass extension"""
    query = update.callback_query
    await query.answer()
    
    text = """
üìÖ <b>–ú–∞—Å—Å–æ–≤–æ–µ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–æ–∫</b>

‚ö†Ô∏è –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.

–û–Ω–∞ –ø–æ–∑–≤–æ–ª–∏—Ç –ø—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –≤—Å–µ–º –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å—Ä–∞–∑—É.
    """
    
    await query.edit_message_text(
        text.strip(),
        reply_markup=keyboards.mass_operations_menu(),
        parse_mode=ParseMode.HTML
    )


@admin_only
async def mass_update_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle mass update"""
    query = update.callback_query
    await query.answer()
    
    text = """
üîÑ <b>–ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</b>

‚ö†Ô∏è –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.

–û–Ω–∞ –ø–æ–∑–≤–æ–ª–∏—Ç –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å—Ä–∞–∑—É.
    """
    
    await query.edit_message_text(
        text.strip(),
        reply_markup=keyboards.mass_operations_menu(),
        parse_mode=ParseMode.HTML
    )


def register_mass_handlers(application):
    """Register mass operations handlers"""
    application.add_handler(CallbackQueryHandler(mass_menu_callback, pattern="^mass_menu$"))
    application.add_handler(CallbackQueryHandler(mass_extend_callback, pattern="^mass_extend$"))
    application.add_handler(CallbackQueryHandler(mass_update_callback, pattern="^mass_update$"))
    
    log.info("Mass operations handlers registered")
