"""
User management keyboards
"""
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from typing import List


def users_menu() -> InlineKeyboardMarkup:
    """Users management menu"""
    keyboard = [
        [
            InlineKeyboardButton("üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data="users_list"),
        ],
        [
            InlineKeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data="user_create"),
            InlineKeyboardButton("üì¶ –ú–∞—Å—Å–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ", callback_data="user_bulk_create"),
        ],
        [
            InlineKeyboardButton("üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data="user_search"),
        ],
        [
            InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu"),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)


def user_actions(user_uuid: str) -> InlineKeyboardMarkup:
    """User action buttons"""
    keyboard = [
        [
            InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"user_edit:{user_uuid}"),
            InlineKeyboardButton("üìÖ –ü—Ä–æ–¥–ª–∏—Ç—å", callback_data=f"user_extend:{user_uuid}"),
        ],
        [
            InlineKeyboardButton("üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞", callback_data=f"user_devices:{user_uuid}"),
            InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data=f"user_stats:{user_uuid}"),
        ],
        [
            InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Ç—Ä–∞—Ñ–∏–∫", callback_data=f"user_reset_traffic:{user_uuid}"),
        ],
        [
            InlineKeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"user_delete_confirm:{user_uuid}"),
        ],
        [
            InlineKeyboardButton("‚óÄÔ∏è –ö —Å–ø–∏—Å–∫—É", callback_data="users_list"),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)


def extend_presets(user_uuid: str) -> InlineKeyboardMarkup:
    """Subscription extension presets"""
    keyboard = [
        [
            InlineKeyboardButton("7 –¥–Ω–µ–π", callback_data=f"extend:{user_uuid}:7"),
            InlineKeyboardButton("14 –¥–Ω–µ–π", callback_data=f"extend:{user_uuid}:14"),
        ],
        [
            InlineKeyboardButton("30 –¥–Ω–µ–π", callback_data=f"extend:{user_uuid}:30"),
            InlineKeyboardButton("60 –¥–Ω–µ–π", callback_data=f"extend:{user_uuid}:60"),
        ],
        [
            InlineKeyboardButton("90 –¥–Ω–µ–π", callback_data=f"extend:{user_uuid}:90"),
            InlineKeyboardButton("180 –¥–Ω–µ–π", callback_data=f"extend:{user_uuid}:180"),
        ],
        [
            InlineKeyboardButton("365 –¥–Ω–µ–π", callback_data=f"extend:{user_uuid}:365"),
        ],
        [
            InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"user_view:{user_uuid}"),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)


def delete_confirmation(user_uuid: str) -> InlineKeyboardMarkup:
    """Delete confirmation keyboard"""
    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"user_delete_pin:{user_uuid}"),
            InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"user_view:{user_uuid}"),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)


def user_devices_actions(user_uuid: str, has_devices: bool = False) -> InlineKeyboardMarkup:
    """User devices action buttons"""
    keyboard = []
    
    if has_devices:
        keyboard.append([
            InlineKeyboardButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞", callback_data=f"user_clear_devices_confirm:{user_uuid}"),
        ])
    
    keyboard.append([
        InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", callback_data=f"user_view:{user_uuid}"),
    ])
    
    return InlineKeyboardMarkup(keyboard)


def clear_devices_confirmation(user_uuid: str, devices_count: int) -> InlineKeyboardMarkup:
    """Clear devices confirmation keyboard"""
    keyboard = [
        [
            InlineKeyboardButton(f"‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å ({devices_count} —à—Ç.)", callback_data=f"user_clear_devices_execute:{user_uuid}"),
        ],
        [
            InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"user_devices:{user_uuid}"),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)


def pagination(current_page: int, total_pages: int, prefix: str = "users_page") -> List[InlineKeyboardButton]:
    """Create pagination buttons"""
    buttons = []
    
    if current_page > 1:
        buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è", callback_data=f"{prefix}:{current_page-1}"))
    
    buttons.append(InlineKeyboardButton(f"{current_page}/{total_pages}", callback_data="noop"))
    
    if current_page < total_pages:
        buttons.append(InlineKeyboardButton("‚û°Ô∏è", callback_data=f"{prefix}:{current_page+1}"))
    
    return buttons


def back_to_main() -> InlineKeyboardMarkup:
    """Back to main menu button"""
    keyboard = [[InlineKeyboardButton("‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]]
    return InlineKeyboardMarkup(keyboard)


def back_to_users() -> InlineKeyboardMarkup:
    """Back to users menu button"""
    keyboard = [[InlineKeyboardButton("‚óÄÔ∏è –ú–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data="users_menu")]]
    return InlineKeyboardMarkup(keyboard)
